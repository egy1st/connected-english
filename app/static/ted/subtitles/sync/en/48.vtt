WEBVTT

00:00:12.150 --> 00:00:13.150
So anyway, who am I?

00:00:13.150 --> 00:00:16.150
I usually say to people, when they say, "What do you do?"

00:00:16.150 --> 00:00:18.150
I say, "I do hardware,"

00:00:18.150 --> 00:00:20.150
because it sort of conveniently encompasses everything I do.

00:00:20.150 --> 00:00:24.150
And I recently said that to a venture capitalist casually at some

00:00:24.150 --> 00:00:27.150
Valley event, to which he replied, "How quaint."

00:00:27.150 --> 00:00:29.150
(Laughter)

00:00:29.150 --> 00:00:32.150
And I sort of really was dumbstruck.

00:00:32.150 --> 00:00:34.150
And I really should have said something smart.

00:00:34.150 --> 00:00:39.150
And now I've had a little bit of time to think about it,

00:00:39.150 --> 00:00:41.150
I would have said, "Well, you know,

00:00:41.150 --> 00:00:43.150
if we look at the next 100 years

00:00:43.150 --> 00:00:45.150
and we've seen all these problems in the last few days,

00:00:45.150 --> 00:00:48.150
most of the big issues -- clean water, clean energy --

00:00:48.150 --> 00:00:50.150
and they're interchangeable in some respects --

00:00:50.150 --> 00:00:52.150
and cleaner, more functional materials --

00:00:52.150 --> 00:00:55.150
they all look to me to be hardware problems.

00:00:55.150 --> 00:00:57.150
This doesn't mean we should ignore software,

00:00:57.150 --> 00:00:59.150
or information, or computation."

00:00:59.150 --> 00:01:02.150
And that's in fact probably what I'm going to try and tell you about.

00:01:02.150 --> 00:01:05.150
So, this talk is going to be about how do we make things

00:01:05.150 --> 00:01:10.150
and what are the new ways that we're going to make things in the future.

00:01:10.150 --> 00:01:15.150
Now, TED sends you a lot of spam if you're a speaker

00:01:15.150 --> 00:01:17.150
about "do this, do that" and you fill out all these forms,

00:01:17.150 --> 00:01:20.150
and you don't actually know how they're going to describe you,

00:01:20.150 --> 00:01:23.150
and it flashed across my desk that they were going to introduce me as a futurist.

00:01:23.150 --> 00:01:25.150
And I've always been nervous about the term "futurist,"

00:01:25.150 --> 00:01:28.150
because you seem doomed to failure because you can't really predict it.

00:01:28.150 --> 00:01:31.150
And I was laughing about this with the very smart colleagues I have,

00:01:31.150 --> 00:01:35.150
and said, "You know, well, if I have to talk about the future, what is it?"

00:01:35.150 --> 00:01:40.150
And George Homsey, a great guy, said, "Oh, the future is amazing.

00:01:40.150 --> 00:01:42.150
It is so much stranger than you think.

00:01:42.150 --> 00:01:44.150
We're going to reprogram the bacteria in your gut,

00:01:44.150 --> 00:01:49.150
and we're going to make your poo smell like peppermint."

00:01:49.150 --> 00:01:51.150
(Laughter)

00:01:51.150 --> 00:01:54.150
So, you may think that's sort of really crazy,

00:01:54.150 --> 00:01:56.150
but there are some pretty amazing things that are happening

00:01:56.150 --> 00:01:57.150
that make this possible.

00:01:57.150 --> 00:02:01.150
So, this isn't my work, but it's work of good friends of mine at MIT.

00:02:01.150 --> 00:02:03.150
This is called the registry of standard biological parts.

00:02:03.150 --> 00:02:05.150
This is headed by Drew Endy and Tom Knight

00:02:05.150 --> 00:02:08.150
and a few other very, very bright individuals.

00:02:08.150 --> 00:02:11.150
Basically, what they're doing is looking at biology as a programmable system.

00:02:11.150 --> 00:02:15.150
Literally, think of proteins as subroutines

00:02:15.150 --> 00:02:18.150
that you can string together to execute a program.

00:02:18.150 --> 00:02:23.150
Now, this is actually becoming such an interesting idea.

00:02:23.150 --> 00:02:26.150
This is a state diagram. That's an extremely simple computer.

00:02:26.150 --> 00:02:28.150
This one is a two-bit counter.

00:02:28.150 --> 00:02:34.150
So that's essentially the computational equivalent of two light switches.

00:02:34.150 --> 00:02:37.150
And this is being built by a group of students at Zurich

00:02:37.150 --> 00:02:39.150
for a design competition in biology.

00:02:39.150 --> 00:02:42.150
And from the results of the same competition last year,

00:02:42.150 --> 00:02:46.150
a University of Texas team of students programmed bacteria

00:02:46.150 --> 00:02:49.150
so that they can detect light and switch on and off.

00:02:49.150 --> 00:02:51.150
So this is interesting in the sense that you can now

00:02:51.150 --> 00:02:56.150
do "if-then-for" statements in materials, in structure.

00:02:56.150 --> 00:02:58.150
This is a pretty interesting trend,

00:02:58.150 --> 00:03:00.150
because we used to live in a world where everyone's said glibly,

00:03:00.150 --> 00:03:04.150
"Form follows function," but I think I've sort of grown up in a world

00:03:04.150 --> 00:03:07.150
-- you listened to Neil Gershenfeld yesterday;

00:03:07.150 --> 00:03:11.150
I was in a lab associated with his -- where it's really a world

00:03:11.150 --> 00:03:14.150
where information defines form and function.

00:03:14.150 --> 00:03:18.150
I spent six years thinking about that,

00:03:18.150 --> 00:03:20.150
but to show you the power of art over science --

00:03:20.150 --> 00:03:23.150
this is actually one of the cartoons I write. These are called "HowToons."

00:03:23.150 --> 00:03:25.150
I work with a fabulous illustrator called Nick Dragotta.

00:03:25.150 --> 00:03:27.150
Took me six years at MIT,

00:03:27.150 --> 00:03:31.150
and about that many pages to describe what I was doing,

00:03:31.150 --> 00:03:36.150
and it took him one page. And so this is our muse Tucker.

00:03:36.150 --> 00:03:38.150
He's an interesting little kid -- and his sister, Celine --

00:03:38.150 --> 00:03:40.150
and what he's doing here

00:03:40.150 --> 00:03:44.150
is observing the self-assembly of his Cheerios in his cereal bowl.

00:03:44.150 --> 00:03:47.150
And in fact you can program the self-assembly of things,

00:03:47.150 --> 00:03:49.150
so he starts chocolate-dipping edges,

00:03:49.150 --> 00:03:51.150
changing the hydrophobicity and the hydrophylicity.

00:03:51.150 --> 00:03:53.150
In theory, if you program those sufficiently,

00:03:53.150 --> 00:03:55.150
you should be able to do something pretty interesting

00:03:55.150 --> 00:03:57.150
and make a very complex structure.

00:03:57.150 --> 00:04:02.150
In this case, he's done self-replication of a complex 3D structure.

00:04:02.150 --> 00:04:05.150
And that's what I thought about for a long time,

00:04:05.150 --> 00:04:07.150
because this is how we currently make things.

00:04:07.150 --> 00:04:09.150
This is a silicon wafer, and essentially

00:04:09.150 --> 00:04:13.150
that's just a whole bunch of layers of two-dimensional stuff, sort of layered up.

00:04:13.150 --> 00:04:15.150
The feature side is -- you know, people will say,

00:04:15.150 --> 00:04:17.150
[unclear] down around about 65 nanometers now.

00:04:17.150 --> 00:04:19.150
On the right, that's a radiolara.

00:04:19.150 --> 00:04:22.150
That's a unicellular organism ubiquitous in the oceans.

00:04:22.150 --> 00:04:26.150
And that has feature sizes down to about 20 nanometers,

00:04:26.150 --> 00:04:28.150
and it's a complex 3D structure.

00:04:28.150 --> 00:04:32.150
We could do a lot more with computers and things generally

00:04:32.150 --> 00:04:35.150
if we knew how to build things this way.

00:04:35.150 --> 00:04:38.150
The secret to biology is, it builds computation

00:04:38.150 --> 00:04:41.150
into the way it makes things. So this little thing here, polymerase,

00:04:41.150 --> 00:04:46.150
is essentially a supercomputer designed for replicating DNA.

00:04:46.150 --> 00:04:49.150
And the ribosome here is another little computer

00:04:49.150 --> 00:04:51.150
that helps in the translation of the proteins.

00:04:51.150 --> 00:04:52.150
I thought about this

00:04:52.150 --> 00:04:55.150
in the sense that it's great to build in biological materials,

00:04:55.150 --> 00:04:57.150
but can we do similar things?

00:04:57.150 --> 00:04:59.150
Can we get self-replicating-type behavior?

00:04:59.150 --> 00:05:03.150
Can we get complex 3D structure automatically assembling

00:05:03.150 --> 00:05:05.150
in inorganic systems?

00:05:05.150 --> 00:05:07.150
Because there are some advantages to inorganic systems,

00:05:07.150 --> 00:05:09.150
like higher speed semiconductors, etc.

00:05:09.150 --> 00:05:11.150
So, this is some of my work

00:05:11.150 --> 00:05:17.150
on how do you do an autonomously self-replicating system.

00:05:17.150 --> 00:05:19.150
And this is sort of Babbage's revenge.

00:05:19.150 --> 00:05:20.150
These are little mechanical computers.

00:05:20.150 --> 00:05:23.150
These are five-state state machines.

00:05:23.150 --> 00:05:26.150
So, that's about three light switches lined up.

00:05:26.150 --> 00:05:28.150
In a neutral state, they won't bind at all.

00:05:28.150 --> 00:05:32.150
Now, if I make a string of these, a bit string,

00:05:32.150 --> 00:05:34.150
they will be able to replicate.

00:05:34.150 --> 00:05:35.150
So we start with white, blue, blue, white.

00:05:35.150 --> 00:05:41.150
That encodes; that will now copy. From one comes two,

00:05:41.150 --> 00:05:43.150
and then from two comes three.

00:05:43.150 --> 00:05:47.150
And so you've got this sort of replicating system.

00:05:47.150 --> 00:05:49.150
It was work actually by Lionel Penrose,

00:05:49.150 --> 00:05:52.150
father of Roger Penrose, the tiles guy.

00:05:52.150 --> 00:05:54.150
He did a lot of this work in the '60s,

00:05:54.150 --> 00:05:56.150
and so a lot of this logic theory lay fallow

00:05:56.150 --> 00:05:59.150
as we went down the digital computer revolution, but it's now coming back.

00:05:59.150 --> 00:06:03.150
So now I'm going to show you the hands-free, autonomous self-replication.

00:06:03.150 --> 00:06:05.150
So we've tracked in the video the input string,

00:06:05.150 --> 00:06:07.150
which was green, green, yellow, yellow, green.

00:06:07.150 --> 00:06:11.150
We set them off on this air hockey table.

00:06:11.150 --> 00:06:13.150
You know, high science uses air hockey tables --

00:06:13.150 --> 00:06:14.150
(Laughter)

00:06:14.150 --> 00:06:16.150
-- and if you watch this thing long enough you get dizzy,

00:06:16.150 --> 00:06:19.150
but what you're actually seeing is copies of that original string

00:06:19.150 --> 00:06:22.150
emerging from the parts bin that you have here.

00:06:22.150 --> 00:06:27.150
So we've got autonomous replication of bit strings.

00:06:27.150 --> 00:06:30.150
So, why would you want to replicate bit strings?

00:06:30.150 --> 00:06:33.150
Well, it turns out biology has this other very interesting meme,

00:06:33.150 --> 00:06:36.150
that you can take a linear string, which is a convenient thing to copy,

00:06:36.150 --> 00:06:40.150
and you can fold that into an arbitrarily complex 3D structure.

00:06:40.150 --> 00:06:43.150
So I was trying to, you know, take the engineer's version:

00:06:43.150 --> 00:06:46.150
Can we build a mechanical system in inorganic materials

00:06:46.150 --> 00:06:47.150
that will do the same thing?

00:06:47.150 --> 00:06:52.150
So what I'm showing you here is that we can make a 2D shape --

00:06:52.150 --> 00:06:56.150
the B -- assemble from a string of components

00:06:56.150 --> 00:06:58.150
that follow extremely simple rules.

00:06:58.150 --> 00:07:01.150
And the whole point of going with the extremely simple rules here,

00:07:01.150 --> 00:07:04.150
and the incredibly simple state machines in the previous design,

00:07:04.150 --> 00:07:07.150
was that you don't need digital logic to do computation.

00:07:07.150 --> 00:07:11.150
And that way you can scale things much smaller than microchips.

00:07:11.150 --> 00:07:15.150
So you can literally use these as the tiny components in the assembly process.

00:07:15.150 --> 00:07:20.150
So, Neil Gershenfeld showed you this video on Wednesday, I believe,

00:07:20.150 --> 00:07:22.150
but I'll show you again.

00:07:22.150 --> 00:07:25.150
This is literally the colored sequence of those tiles.

00:07:25.150 --> 00:07:28.150
Each different color has a different magnetic polarity,

00:07:28.150 --> 00:07:33.150
and the sequence is uniquely specifying the structure that is coming out.

00:07:33.150 --> 00:07:36.150
Now, hopefully, those of you who know anything about graph theory

00:07:36.150 --> 00:07:38.150
can look at that, and that will satisfy you

00:07:38.150 --> 00:07:41.150
that that can also do arbitrary 3D structure,

00:07:41.150 --> 00:07:46.150
and in fact, you know, I can now take a dog, carve it up

00:07:46.150 --> 00:07:48.150
and then reassemble it so it's a linear string

00:07:48.150 --> 00:07:50.150
that will fold from a sequence. And now

00:07:50.150 --> 00:07:57.150
I can actually define that three-dimensional object as a sequence of bits.

00:07:57.150 --> 00:08:00.150
So, you know, it's a pretty interesting world

00:08:00.150 --> 00:08:02.150
when you start looking at the world a little bit differently.

00:08:02.150 --> 00:08:05.150
And the universe is now a compiler.

00:08:05.150 --> 00:08:07.150
And so I'm thinking about, you know, what are the programs

00:08:07.150 --> 00:08:10.150
for programming the physical universe?

00:08:10.150 --> 00:08:13.150
And how do we think about materials and structure,

00:08:13.150 --> 00:08:16.150
sort of as an information and computation problem?

00:08:16.150 --> 00:08:19.150
Not just where you attach a micro-controller to the end point,

00:08:19.150 --> 00:08:24.150
but that the structure and the mechanisms are the logic, are the computers.

00:08:24.150 --> 00:08:29.150
Having totally absorbed this philosophy,

00:08:29.150 --> 00:08:32.150
I started looking at a lot of problems a little differently.

00:08:32.150 --> 00:08:33.150
With the universe as a computer,

00:08:33.150 --> 00:08:35.150
you can look at this droplet of water

00:08:35.150 --> 00:08:37.150
as having performed the computations.

00:08:37.150 --> 00:08:39.150
You set a couple of boundary conditions, like gravity,

00:08:39.150 --> 00:08:43.150
the surface tension, density, etc., and then you press "execute,"

00:08:43.150 --> 00:08:48.150
and magically, the universe produces you a perfect ball lens.

00:08:48.150 --> 00:08:50.150
So, this actually applied to the problem

00:08:50.150 --> 00:08:53.150
of -- so there's a half a billion to a billion people in the world

00:08:53.150 --> 00:08:55.150
don't have access to cheap eyeglasses.

00:08:55.150 --> 00:08:57.150
So can you make a machine

00:08:57.150 --> 00:09:01.150
that could make any prescription lens very quickly on site?

00:09:01.150 --> 00:09:05.150
This is a machine where you literally define a boundary condition.

00:09:05.150 --> 00:09:08.150
If it's circular, you make a spherical lens.

00:09:08.150 --> 00:09:11.150
If it's elliptical, you can make an astigmatic lens.

00:09:11.150 --> 00:09:14.150
You then put a membrane on that and you apply pressure --

00:09:14.150 --> 00:09:16.150
so that's part of the extra program.

00:09:16.150 --> 00:09:19.150
And literally with only those two inputs --

00:09:19.150 --> 00:09:21.150
so, the shape of your boundary condition and the pressure --

00:09:21.150 --> 00:09:23.150
you can define an infinite number of lenses

00:09:23.150 --> 00:09:25.150
that cover the range of human refractive error,

00:09:25.150 --> 00:09:30.150
from minus 12 to plus eight diopters, up to four diopters of cylinder.

00:09:30.150 --> 00:09:33.150
And then literally, you now pour on a monomer.

00:09:33.150 --> 00:09:36.150
You know, I'll do a Julia Childs here.

00:09:36.150 --> 00:09:39.150
This is three minutes of UV light.

00:09:39.150 --> 00:09:42.150
And you reverse the pressure on your membrane

00:09:42.150 --> 00:09:45.150
once you've cooked it. Pop it out.

00:09:45.150 --> 00:09:48.150
I've seen this video, but I still don't know if it's going to end right.

00:09:48.150 --> 00:09:51.150
(Laughter)

00:09:51.150 --> 00:09:53.150
So you reverse this. This is a very old movie,

00:09:53.150 --> 00:09:57.150
so with the new prototypes, actually both surfaces are flexible,

00:09:57.150 --> 00:09:59.150
but this will show you the point.

00:09:59.150 --> 00:10:01.150
Now you've finished the lens, you literally pop it out.

00:10:01.150 --> 00:10:08.150
That's next year's Yves Klein, you know, eyeglasses shape.

00:10:08.150 --> 00:10:11.150
And you can see that that has a mild prescription of about minus two diopters.

00:10:11.150 --> 00:10:15.150
And as I rotate it against this side shot, you'll see that that has cylinder,

00:10:15.150 --> 00:10:16.150
and that was programmed in --

00:10:16.150 --> 00:10:20.150
literally into the physics of the system.

00:10:20.150 --> 00:10:23.150
So, this sort of thinking about structure as computation

00:10:23.150 --> 00:10:28.150
and structure as information leads to other things, like this.

00:10:28.150 --> 00:10:31.150
This is something that my people at SQUID Labs

00:10:31.150 --> 00:10:33.150
are working on at the moment, called "electronic rope."

00:10:33.150 --> 00:10:37.150
So literally, you think about a rope. It has very complex structure in the weave.

00:10:37.150 --> 00:10:39.150
And under no load, it's one structure.

00:10:39.150 --> 00:10:42.150
Under a different load, it's a different structure. And you can actually exploit that

00:10:42.150 --> 00:10:44.150
by putting in a very small number of

00:10:44.150 --> 00:10:46.150
conducting fibers to actually make it a sensor.

00:10:46.150 --> 00:10:49.150
So this is now a rope that knows the load on the rope

00:10:49.150 --> 00:10:51.150
at any particular point in the rope.

00:10:51.150 --> 00:10:54.150
Just by thinking about the physics of the world,

00:10:54.150 --> 00:10:56.150
materials as the computer,

00:10:56.150 --> 00:10:59.150
you can start to do things like this.

00:10:59.150 --> 00:11:02.150
I'm going to segue a little here.

00:11:02.150 --> 00:11:04.150
I guess I'm just going to casually tell you the types of things

00:11:04.150 --> 00:11:05.150
that I think about with this.

00:11:05.150 --> 00:11:09.150
One thing I'm really interested about this right now is, how,

00:11:09.150 --> 00:11:13.150
if you're really taking this view of the universe as a computer,

00:11:13.150 --> 00:11:15.150
how do we make things in a very general sense,

00:11:15.150 --> 00:11:19.150
and how might we share the way we make things in a general sense

00:11:19.150 --> 00:11:22.150
the same way you share open source hardware?

00:11:22.150 --> 00:11:25.150
And a lot of talks here have espoused the benefits

00:11:25.150 --> 00:11:27.150
of having lots of people look at problems,

00:11:27.150 --> 00:11:30.150
share the information and work on those things together.

00:11:30.150 --> 00:11:33.150
So, a convenient thing about being a human is you move in linear time,

00:11:33.150 --> 00:11:35.150
and unless Lisa Randall changes that,

00:11:35.150 --> 00:11:38.150
we'll continue to move in linear time.

00:11:38.150 --> 00:11:40.150
So that means anything you do, or anything you make,

00:11:40.150 --> 00:11:42.150
you produce a sequence of steps --

00:11:42.150 --> 00:11:45.150
and I think Lego in the '70s nailed this,

00:11:45.150 --> 00:11:46.150
and they did it most elegantly.

00:11:46.150 --> 00:11:50.150
But they can show you how to build things in sequence.

00:11:50.150 --> 00:11:53.150
So, I'm thinking about, how can we generalize

00:11:53.150 --> 00:11:55.150
the way we make all sorts of things,

00:11:55.150 --> 00:11:57.150
so you end up with this sort of guy, right?

00:11:57.150 --> 00:12:02.150
And I think this applies across a very broad -- sort of, a lot of concepts.

00:12:02.150 --> 00:12:04.150
You know, Cameron Sinclair yesterday said,

00:12:04.150 --> 00:12:06.150
"How do I get everyone to collaborate on design

00:12:06.150 --> 00:12:09.150
globally to do housing for humanity?"

00:12:09.150 --> 00:12:11.150
And if you've seen Amy Smith,

00:12:11.150 --> 00:12:15.150
she talks about how you get students at MIT

00:12:15.150 --> 00:12:17.150
to work with communities in Haiti.

00:12:17.150 --> 00:12:19.150
And I think we have to sort of redefine and rethink

00:12:19.150 --> 00:12:23.150
how we define structure and materials and assembly things,

00:12:23.150 --> 00:12:25.150
so that we can really share the information

00:12:25.150 --> 00:12:27.150
on how you do those things in a more profound way

00:12:27.150 --> 00:12:30.150
and build on each other's source code for structure.

00:12:30.150 --> 00:12:31.150
I don't know exactly how to do this yet,

00:12:31.150 --> 00:12:36.150
but, you know, it's something being actively thought about.

00:12:36.150 --> 00:12:38.150
So, you know, that leads to questions

00:12:38.150 --> 00:12:42.150
like, is this a compiler? Is this a sub-routine?

00:12:42.150 --> 00:12:43.150
Interesting things like that.

00:12:43.150 --> 00:12:46.150
Maybe I'm getting a little too abstract, but you know,

00:12:46.150 --> 00:12:49.150
this is the sort of -- returning to our comic characters --

00:12:49.150 --> 00:12:51.150
this is sort of the universe, or a different universe view,

00:12:51.150 --> 00:12:53.150
that I think is going to be very prevalent in the future --

00:12:53.150 --> 00:12:56.150
from biotech to materials assembly. It was great to hear Bill Joy.

00:12:56.150 --> 00:12:59.150
They're starting to invest in materials science,

00:12:59.150 --> 00:13:01.150
but these are the new things in materials science.

00:13:01.150 --> 00:13:05.150
How do we put real information and real structure into new ideas,

00:13:05.150 --> 00:13:08.150
and see the world in a different way? And it's not going to be binary code

00:13:08.150 --> 00:13:10.150
that defines the computers of the universe --

00:13:10.150 --> 00:13:12.150
it's sort of an analog computer.

00:13:12.150 --> 00:13:17.150
But it's definitely an interesting new worldview.

00:13:17.150 --> 00:13:20.150
I've gone too far. So that sounds like it's it.

00:13:20.150 --> 00:13:22.150
I've probably got a couple of minutes of questions,

00:13:22.150 --> 00:13:26.150
or I can show -- I think they also said that I do extreme stuff

00:13:26.150 --> 00:13:30.150
in the introduction, so I may have to explain that.

00:13:30.150 --> 00:13:33.150
So maybe I'll do that with this short video.

00:13:33.150 --> 00:13:39.150
So this is actually a 3,000-square-foot kite,

00:13:39.150 --> 00:13:41.150
which also happens to be a minimal energy surface.

00:13:41.150 --> 00:13:43.150
So returning to the droplet, again,

00:13:43.150 --> 00:13:45.150
thinking about the universe in a new way.

00:13:45.150 --> 00:13:47.150
This is a kite designed by a guy called Dave Kulp.

00:13:47.150 --> 00:13:49.150
And why do you want a 3,000-square-foot kite?

00:13:49.150 --> 00:13:51.150
So that's a kite the size of your house.

00:13:51.150 --> 00:13:55.150
And so you want that to tow boats very fast.

00:13:55.150 --> 00:13:58.150
So I've been working on this a little, also,

00:13:58.150 --> 00:14:00.150
with a couple of other guys.

00:14:00.150 --> 00:14:02.150
But, you know, this is another way to look at the --

00:14:02.150 --> 00:14:04.150
if you abstract again,

00:14:04.150 --> 00:14:08.150
this is a structure that is defined by the physics of the universe.

00:14:08.150 --> 00:14:09.150
You could just hang it as a bed sheet,

00:14:09.150 --> 00:14:11.150
but again, the computation of all the physics

00:14:11.150 --> 00:14:13.150
gives you the aerodynamic shape.

00:14:13.150 --> 00:14:16.150
And so you can actually sort of almost double your boat speed

00:14:16.150 --> 00:14:23.150
with systems like that. So that's sort of another interesting aspect of the future.

00:14:23.150 --> 00:14:24.150
(Applause)
