WEBVTT

00:00:01.000 --> 00:00:04.000
So I want to talk today about an idea. It's a big idea.

00:00:04.000 --> 00:00:06.000
Actually, I think it'll eventually

00:00:06.000 --> 00:00:08.000
be seen as probably the single biggest idea

00:00:08.000 --> 00:00:10.000
that's emerged in the past century.

00:00:10.000 --> 00:00:12.000
It's the idea of computation.

00:00:12.000 --> 00:00:14.000
Now, of course, that idea has brought us

00:00:14.000 --> 00:00:17.000
all of the computer technology we have today and so on.

00:00:17.000 --> 00:00:20.000
But there's actually a lot more to computation than that.

00:00:20.000 --> 00:00:23.000
It's really a very deep, very powerful, very fundamental idea,

00:00:23.000 --> 00:00:26.000
whose effects we've only just begun to see.

00:00:26.000 --> 00:00:29.000
Well, I myself have spent the past 30 years of my life

00:00:29.000 --> 00:00:31.000
working on three large projects

00:00:31.000 --> 00:00:34.000
that really try to take the idea of computation seriously.

00:00:35.000 --> 00:00:38.000
So I started off at a young age as a physicist

00:00:38.000 --> 00:00:40.000
using computers as tools.

00:00:40.000 --> 00:00:42.000
Then, I started drilling down,

00:00:42.000 --> 00:00:44.000
thinking about the computations I might want to do,

00:00:44.000 --> 00:00:47.000
trying to figure out what primitives they could be built up from

00:00:47.000 --> 00:00:50.000
and how they could be automated as much as possible.

00:00:50.000 --> 00:00:52.000
Eventually, I created a whole structure

00:00:52.000 --> 00:00:54.000
based on symbolic programming and so on

00:00:54.000 --> 00:00:56.000
that let me build Mathematica.

00:00:56.000 --> 00:00:58.000
And for the past 23 years, at an increasing rate,

00:00:58.000 --> 00:01:00.000
we've been pouring more and more ideas

00:01:00.000 --> 00:01:02.000
and capabilities and so on into Mathematica,

00:01:02.000 --> 00:01:05.000
and I'm happy to say that that's led to many good things

00:01:05.000 --> 00:01:07.000
in R &amp; D and education,

00:01:07.000 --> 00:01:09.000
lots of other areas.

00:01:09.000 --> 00:01:11.000
Well, I have to admit, actually,

00:01:11.000 --> 00:01:14.000
that I also had a very selfish reason for building Mathematica:

00:01:14.000 --> 00:01:16.000
I wanted to use it myself,

00:01:16.000 --> 00:01:18.000
a bit like Galileo got to use his telescope

00:01:18.000 --> 00:01:20.000
400 years ago.

00:01:20.000 --> 00:01:23.000
But I wanted to look not at the astronomical universe,

00:01:23.000 --> 00:01:26.000
but at the computational universe.

00:01:26.000 --> 00:01:28.000
So we normally think of programs as being

00:01:28.000 --> 00:01:30.000
complicated things that we build

00:01:30.000 --> 00:01:32.000
for very specific purposes.

00:01:32.000 --> 00:01:35.000
But what about the space of all possible programs?

00:01:35.000 --> 00:01:38.000
Here's a representation of a really simple program.

00:01:38.000 --> 00:01:40.000
So, if we run this program,

00:01:40.000 --> 00:01:42.000
this is what we get.

00:01:42.000 --> 00:01:44.000
Very simple.

00:01:44.000 --> 00:01:46.000
So let's try changing the rule

00:01:46.000 --> 00:01:48.000
for this program a little bit.

00:01:48.000 --> 00:01:50.000
Now we get another result,

00:01:50.000 --> 00:01:52.000
still very simple.

00:01:52.000 --> 00:01:55.000
Try changing it again.

00:01:55.000 --> 00:01:57.000
You get something a little bit more complicated.

00:01:57.000 --> 00:01:59.000
But if we keep running this for a while,

00:01:59.000 --> 00:02:02.000
we find out that although the pattern we get is very intricate,

00:02:02.000 --> 00:02:05.000
it has a very regular structure.

00:02:05.000 --> 00:02:08.000
So the question is: Can anything else happen?

00:02:08.000 --> 00:02:10.000
Well, we can do a little experiment.

00:02:10.000 --> 00:02:13.000
Let's just do a little mathematical experiment, try and find out.

00:02:14.000 --> 00:02:17.000
Let's just run all possible programs

00:02:17.000 --> 00:02:19.000
of the particular type that we're looking at.

00:02:19.000 --> 00:02:21.000
They're called cellular automata.

00:02:21.000 --> 00:02:23.000
You can see a lot of diversity in the behavior here.

00:02:23.000 --> 00:02:25.000
Most of them do very simple things,

00:02:25.000 --> 00:02:27.000
but if you look along all these different pictures,

00:02:27.000 --> 00:02:29.000
at rule number 30,

00:02:29.000 --> 00:02:31.000
you start to see something interesting going on.

00:02:31.000 --> 00:02:33.000
So let's take a closer look

00:02:33.000 --> 00:02:35.000
at rule number 30 here.

00:02:35.000 --> 00:02:37.000
So here it is.

00:02:37.000 --> 00:02:40.000
We're just following this very simple rule at the bottom here,

00:02:40.000 --> 00:02:42.000
but we're getting all this amazing stuff.

00:02:42.000 --> 00:02:44.000
It's not at all what we're used to,

00:02:44.000 --> 00:02:46.000
and I must say that, when I first saw this,

00:02:46.000 --> 00:02:49.000
it came as a huge shock to my intuition.

00:02:49.000 --> 00:02:51.000
And, in fact, to understand it,

00:02:51.000 --> 00:02:53.000
I eventually had to create

00:02:53.000 --> 00:02:55.000
a whole new kind of science.

00:02:56.000 --> 00:02:58.000
(Laughter)

00:02:58.000 --> 00:03:01.000
This science is different, more general,

00:03:01.000 --> 00:03:03.000
than the mathematics-based science that we've had

00:03:03.000 --> 00:03:06.000
for the past 300 or so years.

00:03:06.000 --> 00:03:08.000
You know, it's always seemed like a big mystery:

00:03:08.000 --> 00:03:11.000
how nature, seemingly so effortlessly,

00:03:11.000 --> 00:03:13.000
manages to produce so much

00:03:13.000 --> 00:03:16.000
that seems to us so complex.

00:03:16.000 --> 00:03:19.000
Well, I think we've found its secret:

00:03:19.000 --> 00:03:22.000
It's just sampling what's out there in the computational universe

00:03:22.000 --> 00:03:25.000
and quite often getting things like Rule 30

00:03:25.000 --> 00:03:28.000
or like this.

00:03:29.000 --> 00:03:31.000
And knowing that starts to explain

00:03:31.000 --> 00:03:34.000
a lot of long-standing mysteries in science.

00:03:34.000 --> 00:03:36.000
It also brings up new issues, though,

00:03:36.000 --> 00:03:39.000
like computational irreducibility.

00:03:39.000 --> 00:03:42.000
I mean, we're used to having science let us predict things,

00:03:42.000 --> 00:03:44.000
but something like this

00:03:44.000 --> 00:03:46.000
is fundamentally irreducible.

00:03:46.000 --> 00:03:48.000
The only way to find its outcome

00:03:48.000 --> 00:03:51.000
is, effectively, just to watch it evolve.

00:03:51.000 --> 00:03:53.000
It's connected to, what I call,

00:03:53.000 --> 00:03:55.000
the principle of computational equivalence,

00:03:55.000 --> 00:03:58.000
which tells us that even incredibly simple systems

00:03:58.000 --> 00:04:01.000
can do computations as sophisticated as anything.

00:04:01.000 --> 00:04:04.000
It doesn't take lots of technology or biological evolution

00:04:04.000 --> 00:04:06.000
to be able to do arbitrary computation;

00:04:06.000 --> 00:04:08.000
just something that happens, naturally,

00:04:08.000 --> 00:04:10.000
all over the place.

00:04:10.000 --> 00:04:13.000
Things with rules as simple as these can do it.

00:04:14.000 --> 00:04:16.000
Well, this has deep implications

00:04:16.000 --> 00:04:18.000
about the limits of science,

00:04:18.000 --> 00:04:20.000
about predictability and controllability

00:04:20.000 --> 00:04:23.000
of things like biological processes or economies,

00:04:23.000 --> 00:04:25.000
about intelligence in the universe,

00:04:25.000 --> 00:04:27.000
about questions like free will

00:04:27.000 --> 00:04:30.000
and about creating technology.

00:04:30.000 --> 00:04:32.000
You know, in working on this science for many years,

00:04:32.000 --> 00:04:34.000
I kept wondering,

00:04:34.000 --> 00:04:36.000
"What will be its first killer app?"

00:04:36.000 --> 00:04:38.000
Well, ever since I was a kid,

00:04:38.000 --> 00:04:40.000
I'd been thinking about systematizing knowledge

00:04:40.000 --> 00:04:42.000
and somehow making it computable.

00:04:42.000 --> 00:04:44.000
People like Leibniz had wondered about that too

00:04:44.000 --> 00:04:46.000
300 years earlier.

00:04:46.000 --> 00:04:48.000
But I'd always assumed that to make progress,

00:04:48.000 --> 00:04:51.000
I'd essentially have to replicate a whole brain.

00:04:51.000 --> 00:04:53.000
Well, then I got to thinking:

00:04:53.000 --> 00:04:56.000
This scientific paradigm of mine suggests something different --

00:04:56.000 --> 00:04:58.000
and, by the way, I've now got

00:04:58.000 --> 00:05:01.000
huge computation capabilities in Mathematica,

00:05:01.000 --> 00:05:04.000
and I'm a CEO with some worldly resources

00:05:04.000 --> 00:05:07.000
to do large, seemingly crazy, projects --

00:05:07.000 --> 00:05:09.000
So I decided to just try to see

00:05:09.000 --> 00:05:12.000
how much of the systematic knowledge that's out there in the world

00:05:12.000 --> 00:05:14.000
we could make computable.

00:05:14.000 --> 00:05:16.000
So, it's been a big, very complex project,

00:05:16.000 --> 00:05:19.000
which I was not sure was going to work at all.

00:05:19.000 --> 00:05:22.000
But I'm happy to say it's actually going really well.

00:05:22.000 --> 00:05:24.000
And last year we were able

00:05:24.000 --> 00:05:26.000
to release the first website version

00:05:26.000 --> 00:05:28.000
of Wolfram Alpha.

00:05:28.000 --> 00:05:31.000
Its purpose is to be a serious knowledge engine

00:05:31.000 --> 00:05:34.000
that computes answers to questions.

00:05:34.000 --> 00:05:36.000
So let's give it a try.

00:05:36.000 --> 00:05:38.000
Let's start off with something really easy.

00:05:38.000 --> 00:05:40.000
Hope for the best.

00:05:40.000 --> 00:05:42.000
Very good. Okay.

00:05:42.000 --> 00:05:44.000
So far so good.

00:05:44.000 --> 00:05:47.000
(Laughter)

00:05:47.000 --> 00:05:50.000
Let's try something a little bit harder.

00:05:50.000 --> 00:05:52.000
Let's do

00:05:52.000 --> 00:05:55.000
some mathy thing,

00:05:55.000 --> 00:05:58.000
and with luck it'll work out the answer

00:05:58.000 --> 00:06:00.000
and try and tell us some interesting things

00:06:00.000 --> 00:06:02.000
things about related math.

00:06:02.000 --> 00:06:05.000
We could ask it something about the real world.

00:06:05.000 --> 00:06:07.000
Let's say -- I don't know --

00:06:07.000 --> 00:06:10.000
what's the GDP of Spain?

00:06:10.000 --> 00:06:12.000
And it should be able to tell us that.

00:06:12.000 --> 00:06:14.000
Now we could compute something related to this,

00:06:14.000 --> 00:06:16.000
let's say ... the GDP of Spain

00:06:16.000 --> 00:06:18.000
divided by, I don't know,

00:06:18.000 --> 00:06:20.000
the -- hmmm ...

00:06:20.000 --> 00:06:22.000
let's say the revenue of Microsoft.

00:06:22.000 --> 00:06:24.000
(Laughter)

00:06:24.000 --> 00:06:26.000
The idea is that we can just type this in,

00:06:26.000 --> 00:06:29.000
this kind of question in, however we think of it.

00:06:29.000 --> 00:06:31.000
So let's try asking a question,

00:06:31.000 --> 00:06:33.000
like a health related question.

00:06:33.000 --> 00:06:36.000
So let's say we have a lab finding that ...

00:06:36.000 --> 00:06:38.000
you know, we have an LDL level of 140

00:06:38.000 --> 00:06:41.000
for a male aged 50.

00:06:41.000 --> 00:06:43.000
So let's type that in, and now Wolfram Alpha

00:06:43.000 --> 00:06:45.000
will go and use available public health data

00:06:45.000 --> 00:06:47.000
and try and figure out

00:06:47.000 --> 00:06:50.000
what part of the population that corresponds to and so on.

00:06:50.000 --> 00:06:53.000
Or let's try asking about, I don't know,

00:06:53.000 --> 00:06:55.000
the International Space Station.

00:06:55.000 --> 00:06:57.000
And what's happening here is that

00:06:57.000 --> 00:06:59.000
Wolfram Alpha is not just looking up something;

00:06:59.000 --> 00:07:02.000
it's computing, in real time,

00:07:02.000 --> 00:07:05.000
where the International Space Station is right now at this moment,

00:07:05.000 --> 00:07:08.000
how fast it's going, and so on.

00:07:09.000 --> 00:07:12.000
So Wolfram Alpha knows about lots and lots of kinds of things.

00:07:12.000 --> 00:07:14.000
It's got, by now,

00:07:14.000 --> 00:07:16.000
pretty good coverage of everything you might find

00:07:16.000 --> 00:07:19.000
in a standard reference library.

00:07:19.000 --> 00:07:21.000
But the goal is to go much further

00:07:21.000 --> 00:07:24.000
and, very broadly, to democratize

00:07:24.000 --> 00:07:27.000
all of this knowledge,

00:07:27.000 --> 00:07:29.000
and to try and be an authoritative

00:07:29.000 --> 00:07:31.000
source in all areas.

00:07:31.000 --> 00:07:34.000
To be able to compute answers to specific questions that people have,

00:07:34.000 --> 00:07:36.000
not by searching what other people

00:07:36.000 --> 00:07:38.000
may have written down before,

00:07:38.000 --> 00:07:40.000
but by using built in knowledge

00:07:40.000 --> 00:07:43.000
to compute fresh new answers to specific questions.

00:07:43.000 --> 00:07:45.000
Now, of course, Wolfram Alpha

00:07:45.000 --> 00:07:47.000
is a monumentally huge, long-term project

00:07:47.000 --> 00:07:49.000
with lots and lots of challenges.

00:07:49.000 --> 00:07:52.000
For a start, one has to curate a zillion

00:07:52.000 --> 00:07:55.000
different sources of facts and data,

00:07:55.000 --> 00:07:58.000
and we built quite a pipeline of Mathematica automation

00:07:58.000 --> 00:08:01.000
and human domain experts for doing this.

00:08:01.000 --> 00:08:03.000
But that's just the beginning.

00:08:03.000 --> 00:08:05.000
Given raw facts or data

00:08:05.000 --> 00:08:07.000
to actually answer questions,

00:08:07.000 --> 00:08:09.000
one has to compute:

00:08:09.000 --> 00:08:11.000
one has to implement all those methods and models

00:08:11.000 --> 00:08:13.000
and algorithms and so on

00:08:13.000 --> 00:08:16.000
that science and other areas have built up over the centuries.

00:08:16.000 --> 00:08:19.000
Well, even starting from Mathematica,

00:08:19.000 --> 00:08:21.000
this is still a huge amount of work.

00:08:21.000 --> 00:08:23.000
So far, there are about 8 million lines

00:08:23.000 --> 00:08:25.000
of Mathematica code in Wolfram Alpha

00:08:25.000 --> 00:08:28.000
built by experts from many, many different fields.

00:08:28.000 --> 00:08:31.000
Well, a crucial idea of Wolfram Alpha

00:08:31.000 --> 00:08:33.000
is that you can just ask it questions

00:08:33.000 --> 00:08:36.000
using ordinary human language,

00:08:36.000 --> 00:08:38.000
which means that we've got to be able to take

00:08:38.000 --> 00:08:41.000
all those strange utterances that people type into the input field

00:08:41.000 --> 00:08:43.000
and understand them.

00:08:43.000 --> 00:08:45.000
And I must say that I thought that step

00:08:45.000 --> 00:08:48.000
might just be plain impossible.

00:08:49.000 --> 00:08:51.000
Two big things happened:

00:08:51.000 --> 00:08:54.000
First, a bunch of new ideas about linguistics

00:08:54.000 --> 00:08:57.000
that came from studying the computational universe;

00:08:57.000 --> 00:09:00.000
and second, the realization that having actual computable knowledge

00:09:00.000 --> 00:09:02.000
completely changes how one can

00:09:02.000 --> 00:09:05.000
set about understanding language.

00:09:05.000 --> 00:09:07.000
And, of course, now

00:09:07.000 --> 00:09:09.000
with Wolfram Alpha actually out in the wild,

00:09:09.000 --> 00:09:11.000
we can learn from its actual usage.

00:09:11.000 --> 00:09:13.000
And, in fact, there's been

00:09:13.000 --> 00:09:15.000
an interesting coevolution that's been going on

00:09:15.000 --> 00:09:17.000
between Wolfram Alpha

00:09:17.000 --> 00:09:19.000
and its human users,

00:09:19.000 --> 00:09:21.000
and it's really encouraging.

00:09:21.000 --> 00:09:23.000
Right now, if we look at web queries,

00:09:23.000 --> 00:09:26.000
more than 80 percent of them get handled successfully the first time.

00:09:26.000 --> 00:09:28.000
And if you look at things like the iPhone app,

00:09:28.000 --> 00:09:30.000
the fraction is considerably larger.

00:09:30.000 --> 00:09:32.000
So, I'm pretty pleased with it all.

00:09:32.000 --> 00:09:34.000
But, in many ways,

00:09:34.000 --> 00:09:37.000
we're still at the very beginning with Wolfram Alpha.

00:09:37.000 --> 00:09:39.000
I mean, everything is scaling up very nicely

00:09:39.000 --> 00:09:41.000
and we're getting more confident.

00:09:41.000 --> 00:09:43.000
You can expect to see Wolfram Alpha technology

00:09:43.000 --> 00:09:45.000
showing up in more and more places,

00:09:45.000 --> 00:09:48.000
working both with this kind of public data, like on the website,

00:09:48.000 --> 00:09:50.000
and with private knowledge

00:09:50.000 --> 00:09:53.000
for people and companies and so on.

00:09:53.000 --> 00:09:56.000
You know, I've realized that Wolfram Alpha actually gives one

00:09:56.000 --> 00:09:58.000
a whole new kind of computing

00:09:58.000 --> 00:10:00.000
that one can call knowledge-based computing,

00:10:00.000 --> 00:10:03.000
in which one's starting not just from raw computation,

00:10:03.000 --> 00:10:06.000
but from a vast amount of built-in knowledge.

00:10:06.000 --> 00:10:08.000
And when one does that, one really changes

00:10:08.000 --> 00:10:11.000
the economics of delivering computational things,

00:10:11.000 --> 00:10:13.000
whether it's on the web or elsewhere.

00:10:13.000 --> 00:10:16.000
You know, we have a fairly interesting situation right now.

00:10:16.000 --> 00:10:18.000
On the one hand, we have Mathematica,

00:10:18.000 --> 00:10:21.000
with its sort of precise, formal language

00:10:21.000 --> 00:10:23.000
and a huge network

00:10:23.000 --> 00:10:25.000
of carefully designed capabilities

00:10:25.000 --> 00:10:28.000
able to get a lot done in just a few lines.

00:10:28.000 --> 00:10:31.000
Let me show you a couple of examples here.

00:10:32.000 --> 00:10:35.000
So here's a trivial piece of Mathematica programming.

00:10:36.000 --> 00:10:38.000
Here's something where we're sort of

00:10:38.000 --> 00:10:41.000
integrating a bunch of different capabilities here.

00:10:41.000 --> 00:10:44.000
Here we'll just create, in this line,

00:10:44.000 --> 00:10:47.000
a little user interface that allows us to

00:10:47.000 --> 00:10:49.000
do something fun there.

00:10:50.000 --> 00:10:52.000
If you go on, that's a slightly more complicated program

00:10:52.000 --> 00:10:55.000
that's now doing all sorts of algorithmic things

00:10:55.000 --> 00:10:57.000
and creating user interface and so on.

00:10:57.000 --> 00:11:00.000
But it's something that is very precise stuff.

00:11:00.000 --> 00:11:03.000
It's a precise specification with a precise formal language

00:11:03.000 --> 00:11:06.000
that causes Mathematica to know what to do here.

00:11:06.000 --> 00:11:09.000
Then on the other hand, we have Wolfram Alpha,

00:11:09.000 --> 00:11:11.000
with all the messiness of the world

00:11:11.000 --> 00:11:13.000
and human language and so on built into it.

00:11:13.000 --> 00:11:16.000
So what happens when you put these things together?

00:11:16.000 --> 00:11:18.000
I think it's actually rather wonderful.

00:11:18.000 --> 00:11:20.000
With Wolfram Alpha inside Mathematica,

00:11:20.000 --> 00:11:22.000
you can, for example, make precise programs

00:11:22.000 --> 00:11:24.000
that call on real world data.

00:11:24.000 --> 00:11:26.000
Here's a real simple example.

00:11:29.000 --> 00:11:32.000
You can also just sort of give vague input

00:11:32.000 --> 00:11:34.000
and then try and have Wolfram Alpha

00:11:34.000 --> 00:11:36.000
figure out what you're talking about.

00:11:36.000 --> 00:11:38.000
Let's try this here.

00:11:38.000 --> 00:11:41.000
But actually I think the most exciting thing about this

00:11:41.000 --> 00:11:43.000
is that it really gives one the chance

00:11:43.000 --> 00:11:46.000
to democratize programming.

00:11:46.000 --> 00:11:49.000
I mean, anyone will be able to say what they want in plain language.

00:11:49.000 --> 00:11:52.000
Then, the idea is that Wolfram Alpha will be able to figure out

00:11:52.000 --> 00:11:54.000
what precise pieces of code

00:11:54.000 --> 00:11:56.000
can do what they're asking for

00:11:56.000 --> 00:11:59.000
and then show them examples that will let them pick what they need

00:11:59.000 --> 00:12:02.000
to build up bigger and bigger, precise programs.

00:12:02.000 --> 00:12:04.000
So, sometimes, Wolfram Alpha

00:12:04.000 --> 00:12:06.000
will be able to do the whole thing immediately

00:12:06.000 --> 00:12:09.000
and just give back a whole big program that you can then compute with.

00:12:09.000 --> 00:12:11.000
Here's a big website

00:12:11.000 --> 00:12:14.000
where we've been collecting lots of educational

00:12:14.000 --> 00:12:17.000
and other demonstrations about lots of kinds of things.

00:12:17.000 --> 00:12:20.000
I'll show you one example here.

00:12:21.000 --> 00:12:24.000
This is just an example of one of these computable documents.

00:12:24.000 --> 00:12:26.000
This is probably a fairly small

00:12:26.000 --> 00:12:28.000
piece of Mathematica code

00:12:28.000 --> 00:12:30.000
that's able to be run here.

00:12:32.000 --> 00:12:35.000
Okay. Let's zoom out again.

00:12:35.000 --> 00:12:37.000
So, given our new kind of science,

00:12:37.000 --> 00:12:40.000
is there a general way to use it to make technology?

00:12:40.000 --> 00:12:42.000
So, with physical materials,

00:12:42.000 --> 00:12:44.000
we're used to going around the world

00:12:44.000 --> 00:12:46.000
and discovering that particular materials

00:12:46.000 --> 00:12:48.000
are useful for particular

00:12:48.000 --> 00:12:50.000
technological purposes.

00:12:50.000 --> 00:12:52.000
Well, it turns out we can do very much the same kind of thing

00:12:52.000 --> 00:12:54.000
in the computational universe.

00:12:54.000 --> 00:12:57.000
There's an inexhaustible supply of programs out there.

00:12:57.000 --> 00:12:59.000
The challenge is to see how to

00:12:59.000 --> 00:13:01.000
harness them for human purposes.

00:13:01.000 --> 00:13:03.000
Something like Rule 30, for example,

00:13:03.000 --> 00:13:05.000
turns out to be a really good randomness generator.

00:13:05.000 --> 00:13:07.000
Other simple programs are good models

00:13:07.000 --> 00:13:10.000
for processes in the natural or social world.

00:13:10.000 --> 00:13:12.000
And, for example, Wolfram Alpha and Mathematica

00:13:12.000 --> 00:13:14.000
are actually now full of algorithms

00:13:14.000 --> 00:13:17.000
that we discovered by searching the computational universe.

00:13:18.000 --> 00:13:21.000
And, for example, this -- if we go back here --

00:13:22.000 --> 00:13:24.000
this has become surprisingly popular

00:13:24.000 --> 00:13:26.000
among composers

00:13:26.000 --> 00:13:29.000
finding musical forms by searching the computational universe.

00:13:30.000 --> 00:13:32.000
In a sense, we can use the computational universe

00:13:32.000 --> 00:13:35.000
to get mass customized creativity.

00:13:35.000 --> 00:13:37.000
I'm hoping we can, for example,

00:13:37.000 --> 00:13:39.000
use that even to get Wolfram Alpha

00:13:39.000 --> 00:13:42.000
to routinely do invention and discovery on the fly,

00:13:42.000 --> 00:13:44.000
and to find all sorts of wonderful stuff

00:13:44.000 --> 00:13:46.000
that no engineer

00:13:46.000 --> 00:13:49.000
and no process of incremental evolution would ever come up with.

00:13:50.000 --> 00:13:53.000
Well, so, that leads to kind of an ultimate question:

00:13:53.000 --> 00:13:56.000
Could it be that someplace out there in the computational universe

00:13:56.000 --> 00:13:59.000
we might find our physical universe?

00:13:59.000 --> 00:14:01.000
Perhaps there's even some quite simple rule,

00:14:01.000 --> 00:14:04.000
some simple program for our universe.

00:14:04.000 --> 00:14:06.000
Well, the history of physics would have us believe

00:14:06.000 --> 00:14:09.000
that the rule for the universe must be pretty complicated.

00:14:09.000 --> 00:14:11.000
But in the computational universe,

00:14:11.000 --> 00:14:14.000
we've now seen how rules that are incredibly simple

00:14:14.000 --> 00:14:17.000
can produce incredibly rich and complex behavior.

00:14:17.000 --> 00:14:20.000
So could that be what's going on with our whole universe?

00:14:21.000 --> 00:14:23.000
If the rules for the universe are simple,

00:14:23.000 --> 00:14:25.000
it's kind of inevitable that they have to be

00:14:25.000 --> 00:14:27.000
very abstract and very low level;

00:14:27.000 --> 00:14:29.000
operating, for example, far below

00:14:29.000 --> 00:14:31.000
the level of space or time,

00:14:31.000 --> 00:14:33.000
which makes it hard to represent things.

00:14:33.000 --> 00:14:35.000
But in at least a large class of cases,

00:14:35.000 --> 00:14:37.000
one can think of the universe as being

00:14:37.000 --> 00:14:39.000
like some kind of network,

00:14:39.000 --> 00:14:41.000
which, when it gets big enough,

00:14:41.000 --> 00:14:43.000
behaves like continuous space

00:14:43.000 --> 00:14:45.000
in much the same way as having lots of molecules

00:14:45.000 --> 00:14:47.000
can behave like a continuous fluid.

00:14:47.000 --> 00:14:50.000
Well, then the universe has to evolve by applying

00:14:50.000 --> 00:14:53.000
little rules that progressively update this network.

00:14:53.000 --> 00:14:55.000
And each possible rule, in a sense,

00:14:55.000 --> 00:14:57.000
corresponds to a candidate universe.

00:14:57.000 --> 00:15:00.000
Actually, I haven't shown these before,

00:15:01.000 --> 00:15:04.000
but here are a few of the candidate universes

00:15:04.000 --> 00:15:06.000
that I've looked at.

00:15:06.000 --> 00:15:08.000
Some of these are hopeless universes,

00:15:08.000 --> 00:15:10.000
completely sterile,

00:15:10.000 --> 00:15:12.000
with other kinds of pathologies like no notion of space,

00:15:12.000 --> 00:15:15.000
no notion of time, no matter,

00:15:15.000 --> 00:15:17.000
other problems like that.

00:15:17.000 --> 00:15:20.000
But the exciting thing that I've found in the last few years

00:15:20.000 --> 00:15:22.000
is that you actually don't have to go very far

00:15:22.000 --> 00:15:24.000
in the computational universe

00:15:24.000 --> 00:15:26.000
before you start finding candidate universes

00:15:26.000 --> 00:15:29.000
that aren't obviously not our universe.

00:15:29.000 --> 00:15:31.000
Here's the problem:

00:15:31.000 --> 00:15:34.000
Any serious candidate for our universe

00:15:34.000 --> 00:15:37.000
is inevitably full of computational irreducibility.

00:15:37.000 --> 00:15:40.000
Which means that it is irreducibly difficult

00:15:40.000 --> 00:15:42.000
to find out how it will really behave,

00:15:42.000 --> 00:15:45.000
and whether it matches our physical universe.

00:15:46.000 --> 00:15:49.000
A few years ago, I was pretty excited to discover

00:15:49.000 --> 00:15:52.000
that there are candidate universes with incredibly simple rules

00:15:52.000 --> 00:15:54.000
that successfully reproduce special relativity,

00:15:54.000 --> 00:15:57.000
and even general relativity and gravitation,

00:15:57.000 --> 00:16:00.000
and at least give hints of quantum mechanics.

00:16:00.000 --> 00:16:02.000
So, will we find the whole of physics?

00:16:02.000 --> 00:16:04.000
I don't know for sure,

00:16:04.000 --> 00:16:06.000
but I think at this point it's sort of

00:16:06.000 --> 00:16:08.000
almost embarrassing not to at least try.

00:16:08.000 --> 00:16:10.000
Not an easy project.

00:16:10.000 --> 00:16:12.000
One's got to build a lot of technology.

00:16:12.000 --> 00:16:14.000
One's got to build a structure that's probably

00:16:14.000 --> 00:16:16.000
at least as deep as existing physics.

00:16:16.000 --> 00:16:19.000
And I'm not sure what the best way to organize the whole thing is.

00:16:19.000 --> 00:16:22.000
Build a team, open it up, offer prizes and so on.

00:16:22.000 --> 00:16:24.000
But I'll tell you, here today,

00:16:24.000 --> 00:16:26.000
that I'm committed to seeing this project done,

00:16:26.000 --> 00:16:29.000
to see if, within this decade,

00:16:29.000 --> 00:16:31.000
we can finally hold in our hands

00:16:31.000 --> 00:16:33.000
the rule for our universe

00:16:33.000 --> 00:16:35.000
and know where our universe lies

00:16:35.000 --> 00:16:37.000
in the space of all possible universes ...

00:16:37.000 --> 00:16:40.000
and be able to type into Wolfram Alpha, "the theory of the universe,"

00:16:40.000 --> 00:16:42.000
and have it tell us.

00:16:42.000 --> 00:16:44.000
(Laughter)

00:16:45.000 --> 00:16:47.000
So I've been working on the idea of computation

00:16:47.000 --> 00:16:49.000
now for more than 30 years,

00:16:49.000 --> 00:16:52.000
building tools and methods and turning intellectual ideas

00:16:52.000 --> 00:16:54.000
into millions of lines of code

00:16:54.000 --> 00:16:56.000
and grist for server farms and so on.

00:16:56.000 --> 00:16:58.000
With every passing year,

00:16:58.000 --> 00:17:00.000
I realize how much more powerful

00:17:00.000 --> 00:17:02.000
the idea of computation really is.

00:17:02.000 --> 00:17:04.000
It's taken us a long way already,

00:17:04.000 --> 00:17:06.000
but there's so much more to come.

00:17:06.000 --> 00:17:08.000
From the foundations of science

00:17:08.000 --> 00:17:10.000
to the limits of technology

00:17:10.000 --> 00:17:12.000
to the very definition of the human condition,

00:17:12.000 --> 00:17:14.000
I think computation is destined to be

00:17:14.000 --> 00:17:16.000
the defining idea of our future.

00:17:16.000 --> 00:17:18.000
Thank you.

00:17:18.000 --> 00:17:32.000
(Applause)

00:17:32.000 --> 00:17:34.000
Chris Anderson: That was astonishing.

00:17:34.000 --> 00:17:36.000
Stay here. I've got a question.

00:17:36.000 --> 00:17:40.000
(Applause)

00:17:42.000 --> 00:17:45.000
So, that was, fair to say, an astonishing talk.

00:17:46.000 --> 00:17:49.000
Are you able to say in a sentence or two

00:17:49.000 --> 00:17:52.000
how this type of thinking

00:17:52.000 --> 00:17:54.000
could integrate at some point

00:17:54.000 --> 00:17:56.000
to things like string theory or the kind of things that people think of

00:17:56.000 --> 00:17:59.000
as the fundamental explanations of the universe?

00:17:59.000 --> 00:18:01.000
Stephen Wolfram: Well, the parts of physics

00:18:01.000 --> 00:18:03.000
that we kind of know to be true,

00:18:03.000 --> 00:18:05.000
things like the standard model of physics:

00:18:05.000 --> 00:18:08.000
what I'm trying to do better reproduce the standard model of physics

00:18:08.000 --> 00:18:10.000
or it's simply wrong.

00:18:10.000 --> 00:18:12.000
The things that people have tried to do in the last 25 years or so

00:18:12.000 --> 00:18:14.000
with string theory and so on

00:18:14.000 --> 00:18:16.000
have been an interesting exploration

00:18:16.000 --> 00:18:19.000
that has tried to get back to the standard model,

00:18:19.000 --> 00:18:21.000
but hasn't quite gotten there.

00:18:21.000 --> 00:18:24.000
My guess is that some great simplifications of what I'm doing

00:18:24.000 --> 00:18:27.000
may actually have considerable resonance

00:18:27.000 --> 00:18:29.000
with what's been done in string theory,

00:18:29.000 --> 00:18:32.000
but that's a complicated math thing

00:18:32.000 --> 00:18:35.000
that I don't yet know how it's going to work out.

00:18:35.000 --> 00:18:37.000
CA: Benoit Mandelbrot is in the audience.

00:18:37.000 --> 00:18:39.000
He also has shown how complexity

00:18:39.000 --> 00:18:41.000
can arise out of a simple start.

00:18:41.000 --> 00:18:43.000
Does your work relate to his?

00:18:43.000 --> 00:18:45.000
SW: I think so.

00:18:45.000 --> 00:18:47.000
I view Benoit Mandelbrot's work

00:18:47.000 --> 00:18:50.000
as one of the founding contributions

00:18:50.000 --> 00:18:53.000
to this kind of area.

00:18:53.000 --> 00:18:55.000
Benoit has been particularly interested

00:18:55.000 --> 00:18:57.000
in nested patterns, in fractals and so on,

00:18:57.000 --> 00:18:59.000
where the structure is something

00:18:59.000 --> 00:19:01.000
that's kind of tree-like,

00:19:01.000 --> 00:19:03.000
and where there's sort of a big branch that makes little branches

00:19:03.000 --> 00:19:06.000
and even smaller branches and so on.

00:19:06.000 --> 00:19:08.000
That's one of the ways

00:19:08.000 --> 00:19:11.000
that you get towards true complexity.

00:19:11.000 --> 00:19:14.000
I think things like the Rule 30 cellular automaton

00:19:14.000 --> 00:19:16.000
get us to a different level.

00:19:16.000 --> 00:19:19.000
In fact, in a very precise way, they get us to a different level

00:19:19.000 --> 00:19:21.000
because they seem to be things that are

00:19:22.000 --> 00:19:25.000
capable of complexity

00:19:25.000 --> 00:19:28.000
that's sort of as great as complexity can ever get ...

00:19:29.000 --> 00:19:32.000
I could go on about this at great length, but I won't. (Laughter) (Applause)

00:19:32.000 --> 00:19:34.000
CA: Stephen Wolfram, thank you.

00:19:34.000 --> 00:19:36.000
(Applause)

